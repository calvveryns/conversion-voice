import requests
from telegram import Update
from telegram.ext import ContextTypes

from conversion.conversion import convert


# This function handles the `/start` command from a user. It sends a welcome message
# and introduces the bot functionality
async def start_bot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # Send the welcome message
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {update.effective_user.first_name}!\n'
             f'–ú–µ–Ω—è –∑–æ–≤—É—Ç Conversion Voice BOT üëãüèªüëÄ\n\n‚òÅÔ∏è –Ø –∏—Å–ø–æ–ª—å–∑—É—é –æ–±–ª–∞—á–Ω—ã–π '
             f'—Å–µ—Ä–≤–∏—Å –Ø–Ω–¥–µ–∫—Å–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç!\n\n'
             f'üïê –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –¥–æ 30 —Å–µ–∫—É–Ω–¥ –∏'
             f'—è –µ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –≤ —Ç–µ–∫—Å—Ç!',
    )


# This function is called when a voice message is received
async def voice_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # Get the voice message object from the update
    voice_message = update.effective_message.voice

    voice_info = await context.bot.getFile(voice_message.file_id)
    voice_file = requests.get(voice_info.file_path)

    message = convert(
        voice_file,
        '.ogg',
        '.ogg'
    )

    # Send a message to the chat informing the user that a voice message was received
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=f'ü™ß –ê –≤–æ—Ç –∏ —Ç–µ–∫—Å—Ç!\n{message}',
        reply_to_message_id=update.message.id
    )


# This function is called when a video message is received
async def video_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # Get the video message object from the update
    video_message = update.effective_message.video_note

    voice_info = await context.bot.getFile(video_message.file_id)
    voice_file = requests.get(voice_info.file_path)

    message = convert(
        voice_file,
        '.mp4',
        '.ogg'
    )

    # Send a message to the chat informing the user that a video message was received
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=f'ü™ß –ê –≤–æ—Ç –∏ —Ç–µ–∫—Å—Ç!\n{message}',
        reply_to_message_id=update.message.id
    )
